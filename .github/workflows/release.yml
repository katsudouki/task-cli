name: Build Go Application

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.5'

      - name: Get repository name
        id: repo_name
        run: echo "REPO_NAME=$(basename $(git rev-parse --show-toplevel))" >> $GITHUB_ENV

      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build for linux-x86
        run: |
          GOOS=linux GOARCH=386 go build -o $REPO_NAME-linux-x86 .
        
      - name: Build for linux-x86-64
        run: |
          GOOS=linux GOARCH=amd64 go build -o $REPO_NAME-linux-x86-64 .

      - name: Build for windows-x86
        run: |
          GOOS=windows GOARCH=386 go build -o $REPO_NAME-windows-x86.exe .

      - name: Build for windows-x86-64
        run: |
          GOOS=windows GOARCH=amd64 go build -o $REPO_NAME-windows-x86-64.exe .

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          body: "Release new version."
          draft: false
          prerelease: false

      - name: Upload Linux 32-bit binary to GitHub Release
        run: |
          curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./$REPO_NAME-linux-x86 \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$REPO_NAME-linux-x86"

      - name: Upload Linux 64-bit binary to GitHub Release
        run: |
          curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./$REPO_NAME-linux-x86-64 \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$REPO_NAME-linux-x86-64"

      - name: Upload Windows 32-bit binary to GitHub Release
        run: |
          curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./$REPO_NAME-windows-x86.exe \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$REPO_NAME-windows-x86.exe"

      - name: Upload Windows 64-bit binary to GitHub Release
        run: |
          curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./$REPO_NAME-windows-x86-64.exe \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$REPO_NAME-windows-x86-64.exe"
